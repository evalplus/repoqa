{"author":{"id":"MDQ6VXNlcjcwMTAyMzc5","is_bot":false,"login":"gtorrico","name":""},"body":"Thank you for creating such an performant yet easy to use framework.\r\n\r\nSome users might like to use stricter warnings or treat warnings as errors in their code.  Exporting the includes as system libraries [should allow](https://foonathan.net/2018/10/cmake-warnings/#preventing-warnings-in-header-files) the compiler to ignore warnings generated when including `drogon` header files but I still got warnings after changing `drogon/CMakeLists.txt` in my submodule copy of `drogon` like so:\r\n```diff\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex 0df11f1..dcb5c1a 100755\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -52,7 +52,12 @@ endif(HAS_ANY AND HAS_STRING_VIEW)\r\n\r\n target_include_directories(\r\n   ${PROJECT_NAME}\r\n-  PUBLIC $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/lib/inc>\r\n+  PRIVATE $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/lib/inc>\r\n+         $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/orm_lib/inc>\r\n+         $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>\r\n+         $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/trantor>\r\n+         $<INSTALL_INTERFACE:${INSTALL_INCLUDE_DIR}>\r\n+  SYSTEM INTERFACE $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/lib/inc>\r\n          $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/orm_lib/inc>\r\n          $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>\r\n          $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/trantor>\r\n```\r\n\r\nAs a workaround I did this in my `CMakeLists.txt`:\r\n```CMake\r\nadd_subdirectory(drogon)\r\n\r\nget_target_property(DROGON_INTERFACE_INCLUDES drogon INTERFACE_INCLUDE_DIRECTORIES)\r\nadd_library(drogon_incs INTERFACE)\r\ntarget_include_directories(drogon_incs SYSTEM INTERFACE ${DROGON_INTERFACE_INCLUDES})\r\n\r\nadd_executable(${exe_target} ${exe_sources})            \r\ntarget_link_libraries(${exe_target} PRIVATE drogon_incs)\r\ntarget_link_libraries(${exe_target} PRIVATE drogon)\r\ntarget_compile_features(${exe_target} PRIVATE cxx_std_20)         \r\ntarget_compile_options(${exe_target} PRIVATE ${extra_warning_flags})   \r\n```\r\n\r\nIdeally this workaround would not be needed, but I don't know enough about `CMake` to know why my local changes to `drogon/CMakeLists.txt` failed to work.","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDY4ODE1MzEyMw==","author":{"login":"an-tao"},"authorAssociation":"MEMBER","body":"please change drogon/CMakeLists.txt as follows:\r\n\r\n```diff\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex 0df11f1..c14aff7 100755\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -52,7 +52,7 @@ endif(HAS_ANY AND HAS_STRING_VIEW)\r\n \r\n target_include_directories(\r\n   ${PROJECT_NAME}\r\n-  PUBLIC $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/lib/inc>\r\n+SYSTEM  PUBLIC $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/lib/inc>\r\n          $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/orm_lib/inc>\r\n          $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>\r\n          $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/trantor>\r\n```\r\n\r\nAnd then add drogon as a subdirectory\r\n\r\n```cmake\r\n add_subdirectory(drogon)\r\n target_link_libraries(${PROJECT_NAME} PRIVATE drogon)\r\n```\r\n\r\nthen you could set the compiler flag of your application like:\r\n\r\n```\r\ntarget_compile_options(${PROJECT_NAME} PRIVATE -Wall -Wextra -pedantic -Werror)\r\n```","createdAt":"2020-09-07T08:18:27Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/drogonframework/drogon/issues/560#issuecomment-688153123","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDY4ODQyODk5Mw==","author":{"login":"gtorrico"},"authorAssociation":"NONE","body":"Thank you that worked!","createdAt":"2020-09-07T16:39:55Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/drogonframework/drogon/issues/560#issuecomment-688428993","viewerDidAuthor":false}],"createdAt":"2020-09-07T03:10:07Z","labels":[{"id":"MDU6TGFiZWw5MTU0Nzc5NDE=","name":"question","description":"Further information is requested","color":"d876e3"}],"title":"how can drogon users have stricter warnings in their code?","updatedAt":"2020-09-07T16:39:55Z"}
